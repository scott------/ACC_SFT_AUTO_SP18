<Class1>
<Intro>
<Review>
Uses of Software Automation
Software we will be using
API
Python
Selenium - Web Driver
</Review>
</Intro>

<CourseInfo>
Course information: All course info is posted to GitHub.  
<web_resource>https://github.com/scott------/ACC_SFT_AUTO_SP18</web_resource>
</CourseInfo> 

<ClassFlow> 
Complete bootstrapping:
Test Pull requests for Github account verification
Complete Python installs
Complete PIP setup for Python
Test Basic Python scripts
Test Python PIP
Complete selenium install
Test Launching browswer via selnium
Lecture
Discussion
Assignments
</ClassFlow>

<Survey>
What version of Windows are you running?
What browser do you use most often?
Have you ever taken a technical writing class?
Have you worked in an environment where there are multiple code regions?
</Survey> 

<Lecture>
Lecture Topics:
QA's role
Test Automation
Version Control with Git (fork, pull, branches, issues)
BeautifulSoup
<web_resource> http://beautiful-soup-4.readthedocs.io/en/latest/</web_resource>
</Lecture> 

<test_automation>
Test Automation Lecture Notes


Advantages to test automation:
Repeatability
Speed
Precision
Honest :-) or thorough to a fault
Cheap to run once developed which encourages regression testing inclusion in dev process
Programmatic actions based on results
Custom reports
Enforces discipline
Disadvantages
Expensive to write
Expensive to maintain
Not fast to develop
Not as smart as a human...yet
Not flexible/ is rigid


Should we always automate?

Cases against automated testing
UI is scheduled to change
Not enough budget 
Time
Money
You can throw people at a short term effort
Automation hates to be thrown

Popular Test Automation tools
Selenium
Telerik TestStudio
TestComplete SmartBear
HP QuickTest Pro
Pywinauto

Top 10 Automation Tools https://medium.com/@briananderson2209/best-automation-testing-tools-for-2018-top-10-reviews-8a4a19f664d2

Test Types
Static
Do the standard parts of the page appear as expected?
E.G. - is the company logo in the top left hand corner?
Is the Page Title correctly spelled?
Is the right address displayed in the contact page?
Links
Do all the links work?
This is normally a good case for automation.
Functions aka use cases
Can you do the things that the business rules say you should be able to?
Are the functions working that are specified for your application?
E.G. - Able to sign on
Recover password
Change password
Password complexity enforced


Are we stopping at the first error or are we logging errors and continuing?  (assert vs verify)
Assert can be important depending on the complexity and degree of dependency of function results
Verify can provide a quick and dirty overview but may miss deeper bugs

Automated Testing Best Practices https://smartbear.com/learn/automated-testing/best-practices-for-automation/

Location strategy:
ElementID
Element name attribute
XPath statement
link text
document object model (DOM)

<test_automation>


<Lab>
0. Take a break you are doing great!

1.1 Install BeautifulSoup using PIP:
Open a command shell
CD to your Python directory
CD to Python Scripts (c:\Python27\Scripts)
pip install requests
pip install beautifulsoup4 

1.2 Test BeautifulSoup using the following Python script
Open Idle
File -> New File
Copy and paste the following do not include the code tags:
<code>
from bs4 import BeautifulSoup
import requests
url = raw_input("Enter a website to extract the URL's from: ")
r  = requests.get("http://" +url)
data = r.text
soup = BeautifulSoup(data)
for link in soup.find_all('a'):
    print(link.get('href'))
</code>

1.3 Hit F5 to save and run your new python script
1.4 Save your file with any name you'd like
1.5 Enjoy


3.Using Example 0 and Example 1 build a Selenuim and Chrome driver python script to open https://albany.craigslist.org/ and search for something you are interesting in buying
<web_resource>http://pypi.python.org/pypi/selenium</web_resource>
</Lab>

<Exercises> 
Exercises to work through during the week:
1. Read through this section of the Selenium documentation.  This is an excellent read about testing/QA in general.
<web_resource>https://www.seleniumhq.org/docs/01_introducing_selenium.jsp#</web_resource>

2.Complete two pull requests to class1 on our Github branch.  Both requests must be approved by me to be considered complete.
Pull requests should be edits to the <test_automation> section of this document.  They should contain facts from the test automation web resource noted above.

3. Write a python script to open your favorite website.  At the start of next week's class I will ask you to show me the working script.
</Exercises>  
</Class0>
